# ArbitrageAssistant - 正しいHaconiwa設計（公式構造）
# Organization CRD → Space CRD → Task CRDs

# ==========================================
# Organization CRD - 専門家チーム定義
# ==========================================
apiVersion: haconiwa.dev/v1
kind: Organization
metadata:
  name: arbitrage-assistant-org
  version: "1.0.0"
spec:
  companyName: "ArbitrageAssistant Development"
  industry: "FinTech Software Development"
  basePath: "/Users/rnrnstar/github/ArbitrageAssistant/arbitrage-assistant-org"
  hierarchy:
    departments:
      # CEO Executive Department
      - id: "executive"
        name: "Executive Team"
        description: "Company leadership and strategic decision making"
        roles:
          - roleType: "management"
            title: "Chief Executive Officer"
            agentId: "ceo-main"
            responsibilities:
              - "Strategic vision and direction"
              - "Company-wide decision making"
            environment:
              HACONIWA_ROLE: "CEO系エージェント"
              HACONIWA_AGENT_ID: "ceo-main"
              HACONIWA_ROOM: "room-ceo"
          - roleType: "coordination"
            title: "Director Coordinator"
            agentId: "director-coordinator"
            responsibilities:
              - "5 Directors management"
              - "Cross-team coordination"
            environment:
              HACONIWA_ROLE: "CEO系エージェント"
              HACONIWA_AGENT_ID: "director-coordinator"
              HACONIWA_ROOM: "room-ceo"
          - roleType: "monitoring"
            title: "Progress Monitor"
            agentId: "progress-monitor"
            responsibilities:
              - "Performance tracking"
              - "KPI monitoring"
            environment:
              HACONIWA_ROLE: "CEO系エージェント"
              HACONIWA_AGENT_ID: "progress-monitor"
              HACONIWA_ROOM: "room-ceo"
      
      # Backend Architecture Department
      - id: "backend"
        name: "Backend Architecture Team"
        description: "AWS Amplify Gen2 + GraphQL + DynamoDB専門部門"
        roles:
          - roleType: "management"
            title: "Backend Director"
            agentId: "backend-director"
            responsibilities:
              - "AWS Amplify Gen2技術統括"
              - "GraphQL API設計方針"
            environment:
              HACONIWA_ROLE: "Backend系エージェント"
              HACONIWA_AGENT_ID: "backend-director"
              HACONIWA_ROOM: "room-backend"
          - roleType: "engineering"
            title: "Amplify Gen2 Specialist"
            agentId: "amplify-gen2-specialist"
            responsibilities:
              - "packages/shared-backend/amplify/data/resource.ts実装"
              - "DynamoDB + GSI設計・実装"
              - "GraphQL Subscription技術実装"
            environment:
              HACONIWA_ROLE: "Backend系エージェント"
              HACONIWA_AGENT_ID: "amplify-gen2-specialist"
              HACONIWA_ROOM: "room-backend"
          - roleType: "engineering"
            title: "Cognito Authentication Expert"
            agentId: "cognito-auth-expert"
            responsibilities:
              - "Amazon Cognito技術統合"
              - "認証フロー実装"
      
      # Trading Systems Department
      - id: "trading"
        name: "Trading Systems Team"
        description: "TypeScript + Tauri + 金融計算ロジック専門部門"
        roles:
          - roleType: "management"
            title: "Trading Flow Director"
            agentId: "trading-flow-director"
            responsibilities:
              - "金融計算ロジック技術統括"
              - "Position-Trail-Action実装方針"
          - roleType: "engineering"
            title: "Entry Flow Specialist"
            agentId: "entry-flow-specialist"
            responsibilities:
              - "apps/hedge-system/lib/位置実行エンジン実装"
              - "Entry→Trail→Action技術実装"
          - roleType: "engineering"
            title: "Settlement Flow Specialist"
            agentId: "settlement-flow-specialist"
            responsibilities:
              - "決済・ロスカット処理技術実装"
              - "Trail判定アルゴリズム実装"
      
      # Integration Systems Department
      - id: "integration"
        name: "Integration Systems Team"
        description: "C++/MQL5 + WebSocket + ea/開発専門部門"
        roles:
          - roleType: "management"
            title: "Integration Director"
            agentId: "integration-director"
            responsibilities:
              - "MT4/MT5技術統括"
              - "WebSocket通信方針"
          - roleType: "engineering"
            title: "MT5 Connector Specialist"
            agentId: "mt5-connector-specialist"
            responsibilities:
              - "ea/HedgeSystemConnector.mq5実装"
              - "MQL5プログラミング"
          - roleType: "engineering"
            title: "WebSocket Engineer"
            agentId: "websocket-engineer"
            responsibilities:
              - "ea/websocket-dll/C++実装"
              - "WebSocket技術実装"
      
      # Frontend Experience Department
      - id: "frontend"
        name: "Frontend Experience Team"
        description: "Next.js + React + Tailwind CSS専門部門"
        roles:
          - roleType: "management"
            title: "Frontend Director"
            agentId: "frontend-director"
            responsibilities:
              - "Next.js技術統括"
              - "UI/UX実装方針"
          - roleType: "engineering"
            title: "React Specialist"
            agentId: "react-specialist"
            responsibilities:
              - "apps/admin/Next.js実装"
              - "React + Tailwind CSS実装"
          - roleType: "engineering"
            title: "Desktop App Engineer"
            agentId: "desktop-app-engineer"
            responsibilities:
              - "apps/hedge-system/Tauri実装"
              - "Rust + TypeScript統合"
      
      # DevOps & QA Department
      - id: "devops"
        name: "DevOps & QA Team"
        description: "Turborepo + GitHub Actions + Vitest専門部門"
        roles:
          - roleType: "management"
            title: "DevOps Director"
            agentId: "devops-director"
            responsibilities:
              - "Turborepoビルド最適化統括"
              - "CI/CD技術方針"
          - roleType: "engineering"
            title: "Build Optimization Engineer"
            agentId: "build-optimization-engineer"
            responsibilities:
              - "turbo.json最適化実装"
              - ".github/workflows/設定実装"
          - roleType: "engineering"
            title: "Quality Assurance Engineer"
            agentId: "quality-assurance-engineer"
            responsibilities:
              - "Vitest + React Testing Library実装"
              - "ESLint品質チェック実装"

---
# ==========================================
# Space CRD - 開発空間・部屋定義
# ==========================================
apiVersion: haconiwa.dev/v1
kind: Space
metadata:
  name: arbitrage-assistant-space
  version: "1.0.0"
spec:
  # セキュリティポリシー
  securityPolicy:
    requireAuth: true
    allowedPorts: [3000, 8080, 1420]
    restrictedPaths: [".env*", "*.key"]
  
  # パフォーマンス指標
  performanceTargets:
    buildTime: "< 30s"
    testCoverage: "> 80%"
  
  # タスクブランチ管理
  branchStrategy:
    patterns: ["feature/*", "bugfix/*", "mvp/*"]
    isolationLevel: "room"
    autoCleanup: true
  
  # 6x3 Grid構成（18ペーン・6 Window）- 現実的構成
  grid: "6x3"
  
  # Room定義（実際のWindow構成に対応）
  rooms:
    # Window 0: CEO Executive Office (3 panes)
    - id: "room-ceo"
      name: "🏛️ CEO Executive Office"
      description: "Strategic leadership with 3-pane configuration: Main, Coordination, Monitoring"
      paneCount: 3
      agentIds: ["ceo-main", "director-coordinator", "progress-monitor"]
    
    # Window 1: Backend Architecture (3 panes)
    - id: "room-backend"
      name: "🗄️ Backend Architecture"
      description: "Backend Director, Amplify Gen2 Specialist, Cognito Authentication Expert"
      paneCount: 3
      agentIds: ["backend-director", "amplify-gen2-specialist", "cognito-auth-expert"]
    
    # Window 2: Trading Systems (3 panes)
    - id: "room-trading"
      name: "⚡ Trading Systems"
      description: "Trading Flow Director, Entry Flow Specialist, Settlement Flow Specialist"
      paneCount: 3
      agentIds: ["trading-flow-director", "entry-flow-specialist", "settlement-flow-specialist"]
    
    # Window 3: Integration Systems (3 panes)
    - id: "room-integration"
      name: "🔌 Integration Systems"
      description: "Integration Director, MT5 Connector Specialist, WebSocket Engineer"
      paneCount: 3
      agentIds: ["integration-director", "mt5-connector-specialist", "websocket-engineer"]
    
    # Window 4: Frontend Experience (3 panes)
    - id: "room-frontend"
      name: "🎨 Frontend Experience"
      description: "Frontend Director, React Specialist, Desktop App Engineer"
      paneCount: 3
      agentIds: ["frontend-director", "react-specialist", "desktop-app-engineer"]
    
    # Window 5: DevOps & QA (3 panes)
    - id: "room-devops"
      name: "🚀 DevOps & QA"
      description: "DevOps Director, Build Optimization Engineer, Quality Assurance Engineer"
      paneCount: 3
      agentIds: ["devops-director", "build-optimization-engineer", "quality-assurance-engineer"]

  nations:
    - id: arbitrage-nation
      name: "ArbitrageAssistant Nation"
      cities:
        - id: mvp-city
          name: "MVP Development City"
          villages:
            - id: development-village
              name: "Development Village"
              companies:
                - name: arbitrage-assistant
                  basePath: "/Users/rnrnstar/github/ArbitrageAssistant"
                  organizationRef: "arbitrage-assistant-org"
                  
                  gitRepo:
                    url: "https://github.com/rnrnstar2/ArbitrageAssistant"
                    defaultBranch: "dev"
                    auth: "https"
                    
                  buildings:
                    - id: "hq-tower"
                      name: "ArbitrageAssistant HQ Tower"
                      floors:
                        - id: "executive-floor"
                          name: "Executive & Development Floor"
                  
                  agentDefaults:
                    type: "claude-code"
                    permissions:
                      allow:
                        - "Bash(npm run *)"
                        - "Bash(cd *)"
                        - "Bash(git *)"
                        - "Edit(*)"
                        - "Read(*)"
                        - "Write(*)"
                      deny:
                        - "Bash(rm -rf /)"
                        - "Bash(sudo *)"
                    environment:
                      # 環境変数設定（実験的）
                      variables:
                        HACONIWA_ENVIRONMENT: "arbitrage-assistant"
                        HACONIWA_MVP_MODE: "true"

---
# ==========================================
# Task CRDs - MVP開発タスク定義
# ==========================================
apiVersion: haconiwa.dev/v1
kind: Task
metadata:
  name: mvp-graphql-backend
  version: "1.0.0"
spec:
  id: "task-mvp-graphql-backend"
  title: "AWS Amplify Gen2 + DynamoDB実装"
  description: |
    技術実装要件:
    - packages/shared-backend/amplify/data/resource.ts 
    - User/Account/Position/Action GraphQLスキーマ
    - GSI設定 + Cognito認証
    - GraphQL Subscription
    
    参照: MVPシステム設計.md「2. データベース設計」
  assignee: "amplify-gen2-specialist"
  priority: "high"
  branch: "feature/01_mvp_graphql_backend"
  worktree: true
  spaceRef: "arbitrage-assistant-space"
  room: "room-backend"

---
apiVersion: haconiwa.dev/v1
kind: Task
metadata:
  name: mvp-arbitrage-engine
  version: "1.0.0"
spec:
  id: "task-mvp-arbitrage-engine"
  title: "TypeScript + Tauri 金融計算ロジック実装"
  description: |
    技術実装要件:
    - apps/hedge-system/lib/hedge-system-core.ts
    - apps/hedge-system/lib/position-execution.ts
    - Position状態遷移ロジック
    - Trail判定アルゴリズム
    
    参照: MVPシステム設計.md「4. 実行パターン詳細」
  assignee: "trading-flow-director"
  priority: "high"
  branch: "feature/02_mvp_arbitrage_engine"
  worktree: true
  spaceRef: "arbitrage-assistant-space"
  room: "room-trading"

---
apiVersion: haconiwa.dev/v1
kind: Task
metadata:
  name: mvp-mt5-integration
  version: "1.0.0"
spec:
  id: "task-mvp-mt5-integration"
  title: "MQL5 + C++ WebSocket実装"
  description: |
    技術実装要件:
    - ea/HedgeSystemConnector.mq5
    - ea/websocket-dll/HedgeSystemWebSocket.cpp
    - apps/hedge-system/lib/websocket-server.ts
    - MT4/MT5通信プロトコル
    
    参照: MVPシステム設計.md「7. WebSocket通信設計」
  assignee: "integration-director"
  priority: "high"
  branch: "feature/03_mvp_mt5_integration"
  worktree: true
  spaceRef: "arbitrage-assistant-space"
  room: "room-integration"

---
apiVersion: haconiwa.dev/v1
kind: Task
metadata:
  name: mvp-admin-dashboard
  version: "1.0.0"
spec:
  id: "task-mvp-admin-dashboard"
  title: "Next.js + React + Tailwind CSS実装"
  description: |
    技術実装要件:
    - apps/admin/app/dashboard/page.tsx
    - apps/admin/features/accounts/
    - apps/admin/features/positions/
    - GraphQL Subscription連携
    
    参照: MVPシステム設計.md「5-4. 管理者画面」
  assignee: "frontend-director"
  priority: "high"
  branch: "feature/04_mvp_admin_dashboard"
  worktree: true
  spaceRef: "arbitrage-assistant-space"
  room: "room-frontend"

---
apiVersion: haconiwa.dev/v1
kind: Task
metadata:
  name: mvp-build-optimization
  version: "1.0.0"
spec:
  id: "task-mvp-build-optimization"
  title: "Turborepo + GitHub Actions + Vitest実装"
  description: |
    技術実装要件:
    - turbo.json最適化設定
    - .github/workflows/CI/CD設定
    - Vitest + React Testing Library
    - ESLint品質チェック
    
    参照: MVPシステム設計.md「10. パフォーマンス最適化」
  assignee: "devops-director"
  priority: "medium"
  branch: "enhancement/05_mvp_build_optimization"
  worktree: true
  spaceRef: "arbitrage-assistant-space"
  room: "room-devops"

# Law CRD は現在サポートされていないため一時的に削除