name: Hedge System CI/CD

on:
  push:
    branches: [main, develop]
    paths:
      - "apps/hedge-system/**"
      - "packages/**"
      - ".github/workflows/hedge-system-ci.yml"
  pull_request:
    branches: [main, develop]
    paths:
      - "apps/hedge-system/**"
      - "packages/**"
      - ".github/workflows/hedge-system-ci.yml"
  workflow_dispatch:

env:
  CARGO_TERM_COLOR: always

jobs:
  lint-and-test:
    name: Lint and Test
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: "20"
          cache: "npm"

      - name: Install dependencies
        run: npm ci

      - name: Build applications and packages
        env:
          PARCEL_WATCHER_BACKEND: fs
        run: npx turbo build --filter=hedge-system...

      - name: Lint code
        run: npx turbo lint --filter=hedge-system...

      - name: Type check
        run: |
          cd apps/hedge-system
          npm run check-types

  build-tauri:
    name: Build Tauri App
    needs: lint-and-test
    strategy:
      fail-fast: false
      matrix:
        include:
          - platform: "windows-latest"
            args: ""

    runs-on: ${{ matrix.platform }}
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: "20"
          cache: "npm"

      - name: Rust setup
        uses: dtolnay/rust-toolchain@stable

      - name: Rust cache
        uses: swatinem/rust-cache@v2
        with:
          workspaces: "./apps/hedge-system/src-tauri -> target"

      - name: Install frontend dependencies
        run: npm ci

      - name: Build applications and packages
        env:
          PARCEL_WATCHER_BACKEND: fs
        run: npx turbo build --filter=hedge-system...

      - name: Install jq
        run: |
          choco install jq -y
        shell: powershell

      - name: Disable updater for CI build
        shell: powershell
        run: |
          cd apps/hedge-system/src-tauri
          # CI ビルドではアップデーターアーティファクトを無効化
          $json = Get-Content -Raw -Path tauri.conf.json | ConvertFrom-Json
          $json.bundle.createUpdaterArtifacts = $false
          $json | ConvertTo-Json -Depth 100 | Set-Content -Path tauri.conf.json

      - name: Build Tauri app
        uses: tauri-apps/tauri-action@v0
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          projectPath: "./apps/hedge-system"
          args: ${{ matrix.args }}
