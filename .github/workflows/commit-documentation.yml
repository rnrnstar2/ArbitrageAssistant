name: Commit Documentation Generator

on:
  push:
    branches:
      - main
      - develop
      - 'feature/**'
      - 'fix/**'

jobs:
  generate-commit-docs:
    runs-on: ubuntu-latest
    
    permissions:
      contents: write
      pull-requests: read
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          token: ${{ secrets.CLAUDE_GITHUB_TOKEN }}
          fetch-depth: 0
      
      - name: Get PR number from commit
        id: pr_number
        run: |
          PR_NUMBER=$(gh pr list --state all --search "${{ github.sha }}" --json number --jq '.[0].number // empty')
          echo "pr_number=$PR_NUMBER" >> $GITHUB_OUTPUT
        env:
          GH_TOKEN: ${{ secrets.CLAUDE_GITHUB_TOKEN }}
      
      - name: Generate or Update PR Documentation
        if: steps.pr_number.outputs.pr_number != ''
        uses: anthropics/claude-code-action@v1
        with:
          anthropic_api_key: ${{ secrets.ANTHROPIC_API_KEY }}
          github_token: ${{ secrets.CLAUDE_GITHUB_TOKEN }}
          allowed_tools: "mcp__github"
          prompt: |
            Analyze the latest commit and update the documentation for PR #${{ steps.pr_number.outputs.pr_number }}.
            
            Please:
            1. Check if docs/pull-requests/PR-${{ steps.pr_number.outputs.pr_number }}.md exists
            2. If it exists, update it with the latest commit information
            3. If it doesn't exist, create comprehensive documentation including:
               - PR title, number, and status
               - Author and dates
               - Commit history
               - Summary of all changes
               - Modified files list
               - Code diff analysis
               - Any breaking changes
            
            Use only the MCP GitHub tool to gather information and update the documentation.
            The commit SHA is: ${{ github.sha }}
            
            Save to: docs/pull-requests/PR-${{ steps.pr_number.outputs.pr_number }}.md